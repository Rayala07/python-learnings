# -*- coding: utf-8 -*-
"""NumPy

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CmB0X_rTWxFvR6_5Rw3keVwzZ1oJ1miz
"""

# NumPy is a python module that is used for numerical computing
# Default python collections such as lists, tuples and sets are slower to work with while handling large data thats where numpy comes in to increase the efficiency rate

!pip install numpy

import numpy as np

# Defining a 1D array
array = np.array([1,2,3,4])

array = array*2 # Multiplies each element of the array by 2 in one line.

print(array)

# MultiDimensional Array
# Dimensions are = 0 dim , 1 dim , 2 dim

zeroDim = np.array('A')
print(zeroDim)

oneDim = np.array([1,2,3,4])
print(oneDim)

twoDim = np.array([['A','B','C'],
                  ['D','E','F'],
                  ['G','H','I']])
print(twoDim)

threeDim = np.array([[[1,2,3],[4,5,6]],
                     [[7,8,9],[10,11,12]],
                     [[13,14,15],[16,17,18]]])
print(threeDim)

# To check the dimensions you can call the var.ndim method in print
print(threeDim.ndim)

# To access the shape
print(threeDim.shape)

# Chain Indexing
print(threeDim[0][1][0])

# Optimal - MultiDimensional Indexing
print(threeDim[0,1,0])

# Concatenating elements of the array
letterArray = np.array([[['A','B','C'],['D','E','F'],['G','H','I']],
                        [['J','K','L'],['M','N','O'],['P','Q','R']]])

wordCreation = letterArray[0,0,1] + letterArray[0,0,0] + letterArray[0,2,0]

print(wordCreation) # Will print the word 'BAG'



# Slicing

# array[start(inclusive):end(exclusive):step(skips)]

nums = np.array([[1,2,3],
                 [4,5,6],
                 [7,8,9]])
print(nums[::-2]) # Row slicing

# Column slicing
# array[select row range, select column range]

print(nums[:,0]) # Selecting all rows and printing 1st col

# Printing
# 5,6
# 8,9
print(nums[1:, 1:])